{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { StatisticsApiService } from '../services/statistics.api';\nimport { StatisticsActions } from './statistics.actions';\nimport * as i0 from \"@angular/core\";\nexport let StatisticsEffects = /*#__PURE__*/(() => {\n  class StatisticsEffects {\n    constructor() {\n      this.actions$ = inject(Actions);\n      this.api = inject(StatisticsApiService);\n      this.load$ = createEffect(() => this.actions$.pipe(ofType(StatisticsActions.load), switchMap(({\n        scope,\n        scopeId\n      }) => this.api.fetch(scope, scopeId).pipe(map(response => StatisticsActions.loadSuccess(response)), catchError(error => of(StatisticsActions.loadFailure({\n        error: error.message ?? 'Impossible de récupérer les statistiques'\n      })))))));\n    }\n    static {\n      this.ɵfac = function StatisticsEffects_Factory(t) {\n        return new (t || StatisticsEffects)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: StatisticsEffects,\n        factory: StatisticsEffects.ɵfac\n      });\n    }\n  }\n  return StatisticsEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}